{"version":3,"file":"slide.js","sourceRoot":"","sources":["../../../src/css/transitions/slide.ts"],"names":[],"mappings":"AAAA,OAAO,EAEL,cAAc,EACd,gBAAgB,EACjB,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EACL,kBAAkB,EAClB,YAAY,EACb,MAAM,aAAa,CAAC;AA6BrB;;;GAGG;AACH,MAAM,CAAC,MAAM,KAAK,GAAG,kBAAkB,CAAC,OAAO,EAC7C,SAAS,KAAK,CAAC,OAAuB,EAAE;IACtC,MAAM,EAAC,IAAI,EAAC,KAAK,EAAC,EAAE,EAAC,IAAI,EAAC,GAAG,IAAI,CAAC;IAClC,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,IAAI,CAAC,MAAM,GAAG;QAChB,CAAC,EAAC,OAAO;QACT,EAAE,EAAC,MAAM,CAAC,sBAAsB;KACjC,CAAC,CAAC;IACH,KAAK,IAAI,CAAC,MAAM,GAAG;QACjB,CAAC,EAAC,MAAM;QACR,EAAE,EAAC,OAAO,CAAC,sBAAsB;KAClC,CAAC,CAAC;IACH,EAAE,IAAI,CAAC,MAAM,GAAG;QACd,CAAC,EAAC,MAAM;QACR,EAAE,EAAC,OAAO,CAAC,sBAAsB;KAClC,CAAC,CAAC;IACH,IAAI,IAAI,CAAC,MAAM,GAAG;QAChB,CAAC,EAAC,OAAO;QACT,EAAE,EAAC,MAAM,CAAC,sBAAsB;KACjC,CAAC,CAAC;IACH,IAAI,EACF,IAAI,EACJ,QAAQ,GAAG,GAAG,EACd,CAAC,GAAG,MAAM,EACV,CAAC,GAAG,IAAI,EACR,EAAE,GAAG,EAAE,EACP,EAAE,GAAG,EAAE,EACP,IAAI,GAAG,UAAU,EACjB,aAAa,GAAG,EAAE,EAClB,OAAO,GAAG,GAAG,GACd,mCACI,MAAM,GACN,IAAI,CACR,CAAC;IACF,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IACb,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IACb,OAAO,YAAY,CAAC;QAClB,KAAK,EAAE;YACL,MAAM,EAAE,oBAAoB;YAC5B,IAAI,EAAE,kBAAkB;SACzB;QACD,KAAK,EAAE;YACL,MAAM,EAAE,oBAAoB;YAC5B,EAAE,EAAE,gBAAgB;YACpB,IAAI,EAAE,gBAAgB,CAAC,IAAI;SAC5B;QACD,GAAG,EAAC;;8BAEoB,QAAQ,MAAM,IAAI,aAAa,QAAQ,MAAM,IAAI;;;kBAG7D,aAAa;eACpB,CAAC,IAAI,KAAK,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,CAAA,CAAC,CAAC,SAAS,CAAC;8BACpC,QAAQ,MAAM,IAAI,aAAa,QAAQ,MAAM,IAAI;;;iBAG9D,OAAO;6BACK,CAAC,KAAK,CAAC;;;iBAGnB,OAAO;6BACK,EAAE,KAAK,EAAE;MAChC;QACF,IAAI;KACL,EAAE,IAAI,CAAC,CAAA;AACV,CAAC,CAAC,CAAA","sourcesContent":["import {\n  CSSTransitionOptions,\n  TransitionMode,\n  GeometryLockMode\n} from '../interfaces.js';\nimport {\n  instantiateDefault,\n  mergeObjects\n} from '../utils.js';\n\ninterface CSSSlideOptions extends CSSTransitionOptions  {\n  // easing options (default: ease-out)\n  ease?: string\n  // opacity at start of animation (default: 0)\n  opacity?: number\n  // duration in ms (default: 500)\n  duration?: number\n  // force positioning (default: undefined)\n  leavePosition?: string\n  // slide to left (default: false)\n  left?:Boolean\n  // slide to right (default: false)\n  right?:Boolean\n  // slide to up (default: false)\n  up?:Boolean\n  // slide to down (default: false)\n  down?:Boolean\n  // slide out target x (default: 100%)\n  x?: string\n  // slide out target y (default: 0%)\n  y?: string\n  // slide in start x (default: same as x)\n  x1?: string\n  // slide in start y (default: same as y)\n  y1?: string\n}\n\n/**\n * simple slide transition\n * TODO\n */\nexport const slide = instantiateDefault('slide',\n  function slide(opts:CSSSlideOptions = {}) {\n    const {left,right,up,down} = opts;\n    let simple = {};\n    left && (simple = {\n      x:'-100%',  // slide out to right ..\n      x1:'100%' // .. and in from left\n    });\n    right && (simple = {\n      x:'100%',  // slide out to right ..\n      x1:'-100%' // .. and in from left\n    });\n    up && (simple = {\n      y:'100%',  // slide out to right ..\n      y1:'-100%' // .. and in from left\n    });\n    down && (simple = {\n      y:'-100%',  // slide out to right ..\n      y1:'100%' // .. and in from left\n    });\n    let {\n      mode,\n      duration = 500,\n      x = '100%',\n      y = '0%',\n      x1 = '',\n      y1 = '',\n      ease = 'ease-out',\n      leavePosition = '',\n      opacity = 0.0,\n    } = {\n      ...simple,\n      ...opts\n    };\n    x1 = x1 || x;\n    y1 = y1 || y;\n    return mergeObjects({\n      enter: {\n        active: 'slide-enter-active',\n        from: 'slide-enter-from'\n      },\n      leave: {\n        active: 'slide-leave-active',\n        to: 'slide-leave-to',\n        lock: GeometryLockMode.Auto\n      },\n      css:`\n    .slide-enter-active {\n      transition: transform ${duration}ms ${ease}, opacity ${duration}ms ${ease};\n    }\n    .slide-leave-active {\n      position: ${leavePosition\n        || (mode !== TransitionMode.OutIn ? 'absolute': 'initial')};\n      transition: transform ${duration}ms ${ease}, opacity ${duration}ms ${ease};\n    }\n    .slide-leave-to {\n      opacity: ${opacity};\n      transform: translate(${x}, ${y});\n    }\n    .slide-enter-from {\n      opacity: ${opacity};\n      transform: translate(${x1}, ${y1});\n    }`,\n    mode\n  }, opts)\n})"]}