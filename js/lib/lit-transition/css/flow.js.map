{"version":3,"file":"flow.js","sourceRoot":"","sources":["../../src/css/flow.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  NodePart,\n  html\n} from 'lit-html';\nimport classList from '../core/class-list.js';\nimport {\n  partDomSingle,\n  applyExtents,\n  recordExtents,\n  classChanged,\n  needsLock\n} from '../core/utils.js';\nimport {\n  GeometryLockMode\n} from './interfaces.js'\n \n/**\n * schedules css transitons\n * @param part NodePart that is to be rendered\n * @param classes classes to be applied as part of css flow\n * @param global global params to be merged with flow-specific params\n */\nexport const flow = {\n  async transition(part:NodePart, classes:any, global: any) {\n    // destructure params\n    const {\n      duration = global.duration,\n      active,\n      from,\n      to,\n      lock\n    } = classes;\n\n    // will throw if dom does not expose exactly one\n    // non-text node\n    const dom = partDomSingle(part);\n\n    if(!dom) {\n      // animation was cancelled?\n      return;\n    }\n    //const parent = dom.parentNode;\n    let extents: any;\n    if(lock) {\n      if(lock !== GeometryLockMode.Auto|| active && needsLock(dom, active)) {\n        extents = recordExtents(dom);\n      }\n    }\n    await new Promise(async resolve => {\n      const cl = classList(dom);\n      const add = (c:Array<string>) => Array.isArray(c) ?\n        c.forEach((i:string) => cl.add(i)) : cl.add(c);\n      const remove = (c:Array<string>) => Array.isArray(c) ?\n        c.forEach((i:string) => cl.remove(i)) : cl.remove(c);\n\n      // in this case we apply a previously recorded\n      // geometry\n      if(extents) {\n        applyExtents(dom, extents);\n      }\n\n      // called once transition is completed\n      function done(e:Event) {\n        if(e) {\n          // if e is set we have an actual event\n          if(e.target !== dom) {\n            // bubbled up from someone else, ignore..\n            return;\n          }\n          // this event was meant for us\n          // we handle it definitively\n          e.preventDefault();\n          e.stopPropagation();\n        } \n\n        // Remove all the other excess hooks\n        ['transitionend','transitioncancel'\n        ,'animationend','animationcancel']\n        .filter(type => !e || type !== e.type)\n        .forEach(type => dom.removeEventListener(type, done));\n\n        // remove all classes we added and resolve\n        active && remove(active);\n        from && remove(from);\n        to && remove(to);\n        resolve();\n      }\n      \n      // Register these hooks before we set the css\n      // class es that will trigger animations\n      // or transitions\n      const o = {once:true};\n      if(duration) {\n        setTimeout(done, duration);\n      } else {\n        dom.addEventListener('transitionrun', function() {\n          dom.addEventListener('transitionend', done, o);\n          dom.addEventListener('transitioncancel', done, o);\n        }, o);\n        dom.addEventListener('animationstart', function() {\n          dom.addEventListener('animationend', done, o);\n          dom.addEventListener('animationcancel', done, o);\n        }, o);\n      }\n\n      // add actual transition classes\n      from && await classChanged(dom, () => add(from));\n      active && await classChanged(dom, () => add(active));\n\n      from && remove(from);\n      to && add(to);\n    });\n  },\n  // injects style tags\n  init({data,remove,add,transition}:{data:any,remove:any,add:any,transition:any}) {\n    if(data._cssSource !== transition.css) {\n      data.css && remove(data.css);\n      if(!!transition.css) {\n      // only init css if it has changed!\n      data._cssSource = transition.css;\n      let css = transition.css;\n      css = typeof css === 'string' ? html`<style>${css}</style>`: css;\n      data.css = add(css);\n      }\n    }\n  }\n};"]}