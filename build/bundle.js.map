{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/timestuff.js","../../src/apiclient.js","../../src/FancyButton.svelte","../../src/TopBar.svelte","../../src/HistoryList.svelte","../../src/FilterBar.svelte","../../src/FancyButtonBar.svelte","../../node_modules/svelte/easing/index.mjs","../../node_modules/svelte/transition/index.mjs","../../src/TaskCard.svelte","../../src/TaskList.svelte","../../src/Modals/LoginModal.svelte","../../src/Modals/DelegateModal.svelte","../../src/Modals/AddNewModal.svelte","../../src/Modals/RescheduleModal.svelte","../../src/Modals/ChangeDueModal.svelte","../../src/Modals/NewNoteModal.svelte","../../src/ModalSystem.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.35.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","\nexport const seconds_in_a_day = 86400\n\nexport function timestamp_range_today() {\n    // Begin by setting up the morning, one minute after the start\n    // We use one minute after, to avoid a js from changing the \n    // date in a weird way if we set it to exactly midnight\n    let morning = new Date()\n    morning.setMinutes(1)\n    morning.setHours(0)\n    // Same thing for the night, setting it one minute away from midnight\n    let night = new Date()\n    night.setMinutes(59)\n    night.setHours(23)\n    // Return something that tells you exactly which value is which (and can be destructured\n    // in a clear way without mucking up local scope)\n    return {day_beginning: morning.getTime()/1000, day_end: night.getTime()/1000}\n}\n\n// Enumerated months, as an object to make it explicit\nlet months = {\n    1: 'January',\n    2: 'February',\n    3: 'March',\n    4: 'April',\n    5: 'May',\n    6: 'June',\n    7: 'July',\n    8: 'August',\n    9: 'September',\n    10: 'October',\n    11: 'November',\n    12: 'December',\n}\n\n// Enumerated weekdays, as an object and note a list\n// to make it explicit\nlet weekdays = {\n    0: \"Sunday\",\n    1: \"Monday\",\n    2: \"Tuesday\",\n    3: \"Wednessday\",\n    4: \"Thursday\",\n    5: \"Friday\",\n    6: \"Saturday\",\n}\n\nexport function timestamp_date_format(timestamp) {\n    // A null or 0 timestamp gives us the epoc time, which is\n    // basically never going to be right\n    if (!timestamp || timestamp === 0) {\n        return ''\n    }\n    // Get the date from the timestamp, converted to milliseconds\n    let d = new Date(timestamp * 1000)\n    // For now, use the built-in date string function\n    return d.toDateString()\n}\n\n// If we just want the time, and not the date, this will provide it\nexport function timestamp_time_format(timestamp) {\n    // construct the date object\n    let d = new Date(timestamp * 1000)\n    // compose a string with the results\n    return `${d.getHours()}:${d.getMinutes()}`\n}\n\n// Gives us both of the above functions, combined.\nexport function timestamp_format(timestamp) {\n    // If the time is false (or explicitely 0) Date() will give us a bad value\n    if (!timestamp || timestamp === 0) {\n        return ''\n    }\n    // Compose the result and return\n    return timestamp_date_format(timestamp) + ' at ' + timestamp_time_format(timestamp)\n}\n\n// Determines if a date is 'today' in local time\nexport function is_today(timestamp) {\n    // Construct the date object for the stamp\n    let d = new Date(timestamp*1000)\n    // Construct an object that is set for today\n    let today = new Date()\n    // Compare the day, month, and year value and return result\n    return d.getDate() === today.getDate() &&\n           d.getMonth() === today.getMonth() &&\n           d.getFullYear() === today.getFullYear()\n}\n\n// Determines if a time is not today, and in the past\nexport function is_past(timestamp) {\n    // determine if the date is today\n    let istoday = is_today(timestamp)\n    // Get the timestamp for now\n    let todaystamp = Date.now()/1000\n    // If not today and today is greater then the stamp, it's in the past\n    return !istoday && timestamp < todaystamp\n}\n\nexport function is_future(timestamp) {\n    // Determin if the date is today\n    let istoday = is_today(timestamp)\n    // Get the timestamp for now\n    let todaystamp = Date.now()/1000\n    // If not today and today is smaller then the stamp, it's in the future \n    return !istoday && timestamp > todaystamp\n}","// export let api_root = \"https://api.bullet.blakwurm.com/\"\n\nimport * as timestuff from './timestuff'\n\nconst default_api_root = \"https://bulletapi.blakwurm.com/\"\nexport let api_root = default_api_root\n// export let api_root = \"http://localhost:4242/\"\n// export let api_root = \"http://192.168.0.69:4242/\"\n\n\n// The events that are on tasks can be of these particular\n// kinds, and should be displayed and acted upon in certain\n// ways depending on type\nexport const event_kinds = {\n    activate:\"activate\",\n    makenote:\"makenote\",\n    delegate:\"delegate\",\n    deffer:\"deffer\",\n    cancel:\"cancel\",\n    reschedule:\"reschedule\",\n    strike:\"strike\",\n    complete:\"complete\",\n    reactivate:\"reactivate\",\n    changedue:\"changedue\"\n}\n\n// Used to null a user object (and for reference)\nlet null_userdata = {\n    token: null,\n    token_type: null,\n    refresh_token: null,\n    usernme: null,\n    id: null\n}\n\n// The users that are logged in to the app\nexport let users = {}\n\n// The tasks in the app, organized by user. IE, tasks = {user_id: {task_id: task}}\nexport let tasks = {}\n\n// Starts the API off\nexport async function init() {\n    // Move users and tasks out of storage, if they exist\n    users = JSON.parse(localStorage.getItem('users')) || users\n    tasks = JSON.parse(localStorage.getItem('tasks')) || tasks\n    // Fetch all the tasks for all logged in users. Later we will change this\n    // so that it only fetches relevant tasks, but for now \"all\" is fine\n    await Promise.all(Object.keys(users).map(id=>fetch_all_tasks(id)))\n}\n\n// System to let the client code know that things have changed,\n// so that rendering etc can update\nlet watcher = {\n    login_change:()=>undefined,\n    tasks_change:()=>undefined\n}\n\n// Sets the watcher object. It must have the two functions\n// in the dummy in order to work\nexport function set_watcher(newwatcher) {\n    watcher = newwatcher\n}\n\n// Login function\nexport async function login(l_username, l_password) {\n    // API requires formdata for login\n    let formdata = new FormData()\n    // Assign the formdata manually. We could take the form data\n    // directy from a DOM element, but that violates levels\n    formdata.append('username', l_username)\n    formdata.append('password', l_password)\n    // If we get any errors, then oops no login for you\n    let user_data = {}\n    try {\n        // The API requires a POST request\n        let res = await fetch(api_root+'token/', {\n            method: 'POST',\n            body: formdata\n        })\n        // Get the request, and destructure it. If there's any problem with the data,\n        // we'll get an error and no login will happen\n        let {token, refresh_token, token_type, status, message} = await res.json()\n        // If the status code is 1, then the login was a success. If it was not, then\n        // we don't want to continue\n        // TODO: Update the API's error if the password is bad\n        if (status != 1) { throw new Error('nope')}\n        // Getting the User ID requires another trip back to the server. This\n        // also serves as a test to make sure that the token works\n        res = await fetch(`${api_root}me/`, {\n                method: 'GET',\n                headers: {\n                    'Authorization': `${token_type} ${token}`\n                }\n            }\n        )\n        // The username will be in the payload under 'data'\n        res = await res.json()\n        let {username, id} = res.data\n        // Even though we know the username, we need it to be returned from the /me call\n        // to signify that it was good\n        if (username) {\n            // We package all of this information up\n            user_data = {token, refresh_token, username, token_type, id}\n            // Stash it in memory to be used by the app\n            users[id] = user_data\n            // Make sure that code that cares about object equality triggers\n            users = Object.assign({}, users)\n            // Stash all of the user stuff in  localstorage, in case the page gets unloaded at some point here\n            localStorage.setItem('users', JSON.stringify(users))\n            // Check to see if this user has an entry in tasks. They might already, if this is a re-login\n            if (!tasks[id]) {\n                // Same as with users, we make the container and then stash all of this in localstorage\n                tasks[id] = {}\n                localStorage.setItem('tasks', JSON.stringify(tasks))\n            }\n            // Let the watcher know that things have changed\n            watcher.login_change(Math.random())\n        }\n\n        // If we find ourselves erroring out, we want to print the error, but we don't want everything to break\n    } catch (thrown) {\n        console.error(thrown)\n\n    }\n    console.log(user_data)\n    // If the login was not successful, we still want to return the empty object\n    return user_data\n}\n\n// Handles transofrming our raw query parameters into something useful\nfunction encode_query_string(queryopts, base) {\n    // Begin with the beginning of any query string\n    let query = \"?\"\n    // For each thing in the queryopts object, we convert it to a\n    // URL-safe version and stick it's key's name on the front\n    // Then we stick it on the end of the existing query string\n    for (let [k,v] of Object.entries(queryopts)) {\n        query = `${query}${k}=${encodeURIComponent(v)}&`\n    }\n    // If we haven't added anything to the query string, we don't want to\n    // add just the ? to the URL\n    if (query === \"?\") {\n        return base\n    } else {\n        // If we've added things, however, it's just a concationation\n        return base+query\n    }\n}\n\n// This function takes in our params, and makes an authenticated\n// requst to the API. Internal only.\nasync function makerequest(path, user_id, method=\"GET\", query={}) {\n    // The current user is important. As we can\n    // have multiple users, we want to make sure that we're using the correct\n    // authentication\n    let current_user = users[user_id]\n    // Build the object passed into the Fetch method, including\n    // authentication parameters.\n    let params = {\n        method,\n        headers: {\n            'Authorization': `${current_user.token_type} ${current_user.token}`\n        }\n    }\n    // Encode our query all nice and neat, then use it as the path\n    path = encode_query_string(query, path)\n    // Stash the result variable so that we have something to return to later\n    let res = null\n    // Seemingly reundant try block. Logging during debugging goes here,\n    // so it stays in.\n    try {\n        // Good ol' fetch\n        res = await fetch(`${api_root}${path}`, params)\n    } catch (thrown) {\n        throw thrown\n    }\n    // Check for an authentication error\n    if (res.status === 401) {\n        // Refresh the token so that the user doesn't have to log back in every\n        // two hours\n        let success = await refresh_token(user_id)\n        // Did we refresh? refresh_token logs us out if not successful,\n        // so we don't need to do anything else if not\n        if (success) {\n            // If refreshed, return we do a recursive call\n            // We know that this will either terminate in\n            // a failed call or a success\n            return await makerequest(path, user_id, method, query)\n        }\n    }\n    // The response is json encoded, and a status of 1 indicates success\n    let responsebody = await res.json()\n    if (responsebody.status === 1) {\n        return responsebody.data\n    } else {\n        // An undefined if we fail, so that ?. protections work\n        return undefined\n    }\n}\n\n// If our token isn't valid, we might be able\n// to refresh it via the refresh_token\n// As we can have multiple users, we want\n// to specify which user\nasync function refresh_token(user_id) {\n    // Begin by getting the data for the specified user.\n    // If this is being called, then a login request has\n    // already failed, so we know that something's in\n    // the user data object for this ID\n    let user_data = users[user_id]\n    // Don't you love destructuring? Get just the info we care about\n    let {token, refresh_token} = user_data\n    // the params for the fetch function\n    let params = {\n        method: 'POST',\n        body: JSON.stringify({token, refresh_token})\n    }\n    // And the fetch request to the token refresh endpoint\n    let res = await fetch(`${api_root}token/refresh/`, params)\n    // For this, we use the HTTP status. A 200 means everything\n    // is awesome\n    if (res.status === 200) {\n        // The thing will return a token and a refresh_token\n        // (if the og token was good, it will just return that)\n        // So, we can just stash them in the user's object as normal\n        let b = await res.json()\n        Object.assign(user_data, b)\n        // After we modify the user, we want to make sure that\n        // we save the results\n        localStorage.setItem('users', JSON.stringify(users))\n        console.log(users)\n        return true\n    } else {\n        // If everything is not awesome, we want to logout immediately\n        // so that the user can log themselves back in\n        await logout()\n    }\n    // console.log(res)\n}\n\nfunction import_tasks(tlist) {\n    // If the list is somehow falsy, it's probably 'undefined' as\n    // returned by make_request. However, as we can't be sure *and*\n    // any falsy value is an invalid value for this step,\n    // we just return undefined\n    if (!tlist) {\n        return undefined\n    }\n    // If we ever accidentally pass in a task rather then a list,\n    // we can handle it\n    if (tlist.id) {\n        tlist = [tlist]\n    }\n    // If we're using a library where object inequality\n    // triggers a refresh (like Svelte), then we\n    // want there to be a new object for said\n    // refresh to be triggered\n    let tasks_m = Object.assign({}, tasks)\n    // For each task, we want to make sure that it goes into it's owner's\n    // task bucket, as well as the all-tasks bucket\n    tlist?.forEach(t=>tasks_m[t.owner_id][t.id] = t)\n    // The task list is then replaced, and all is well.\n    tasks = tasks_m\n    // We also store the updated values to localStorage\n    localStorage.setItem('tasks', JSON.stringify(tasks))\n    // Let the watcher know that things have changed\n    watcher.tasks_change(Math.random())\n    // And the list is returned\n    return tlist\n}\n\n// Fetches all the tasks available for the user\nexport async function fetch_all_tasks(user_id) {\n    // Begins with getting the server-side list\n    let serverlist = await makerequest('tasks', user_id)\n    // import_tasks will import any tasks, and will handle\n    // a failed request value\n    return import_tasks(serverlist)\n}\n\nexport async function fetch_active_tasks(user_id) {\n    // The query for this is simple. The tasks that we're\n    // after are logically active.\n    let serverlist = await makerequest('tasks', user_id, 'GET', {active:true})\n    // import_tasks will import any tasks, and will handle\n    // a failed request value\n    return import_tasks(serverlist)\n} \n\n// Allows our client programmer to perform whatever server-supported\n// query that they desire. The API server already does validation\n// on the inputs, so we don't need to do that many here. If \n// the caller screws up, that's on them more or less\nexport async function fetch_tasks_by_query(user_id, query_obj) {\n    // We make the request, passing in the query_obj\n    let serverlist = await makerequest('tasks', user_id, 'GET', query_obj)\n    // And we return the result of import_tasks, which handles\n    // the result of a failed query gracefully\n    return import_tasks(serverlist)\n}\n\n\n// Our log-out function\nexport function logout(user_id) {\n    // For now, all we do to log out is delete the user data\n    // record for the specified user. Later, an API method\n    // could be used in order to actually terminate\n    // the session\n    delete users[user_id]\n    localStorage.setItem('users', JSON.stringify(users))\n    // Make sure that the watcher knows\n    watcher.login_change(Math.random())\n}\n\n// Make an action on a task, by calling the server and returning\n// the result\nexport function task_act(action, user_id, task_id, detail) {\n    // Defer to generic function\n    return big_act('task', action, user_id, task_id, detail)\n}\n\n// Generic action function, an anticipaton of doing actions on other\n// types of records\nasync function big_act(thing_type, action, user_id, thing_id, detail) {\n    // Construct the basic url path\n    let stub_url = `${thing_type}/${thing_id}/action/${action}`\n    // We don't want 'undefined' dangling off of the end, so\n    // we only add in detail if it's there. As 0 is falsy, we\n    // explicitely check for undefined\n    if (detail != undefined) {\n        stub_url += `/${detail}`\n    }\n    // Make the server call\n    let t = await makerequest(stub_url, user_id, 'PUT')\n    // Return the result of import task for API consistency\n    return import_tasks(t)\n}\n\n// Makes a new task via server call\nexport async function make_new_task(user_id, text, due) {\n    // The query is initially just the text\n    let query = {text}\n    // To avoid errors, we only add the due date if it exists.\n    // This value shouldn't be 0, so if it is then we don't want\n    // it anyway\n    if (due) {\n        query.due = due\n    }\n    // Make the server call\n    let resp = await makerequest('task', user_id, 'POST', query)\n    // Return the result of import task for API consistency\n    return await import_tasks(resp)\n}\n","<script>\n    import { createEventDispatcher } from 'svelte';\n\n    const dispatch = createEventDispatcher();\n\n    export let active = false\n    export let selected = false\n    export let confirm = true\n    export let confirm_text = \"Sure?\"\n    export let text = \"Act\"\n    export let name = text\n    export let alt = text\n    export let confirm_alt = confirm_text\n    export let confirmtime = 1500\n    export let rightmost = true\n    export let leftmost = true\n    export let action = function() {}\n    let current_alt = alt\n    let current_text = text\n    let clicked = false\n    let current_timeout = null\n\n    function reset() {\n        current_text = text\n        current_alt = alt\n        clicked = false\n    }\n\n    function clicker(event) {\n        if (clicked || !confirm) { \n            reset()\n            action()\n            dispatch('confirm-click', {name,text});\n            clearTimeout(current_timeout)\n        } else {\n            clicked = true\n            current_text = confirm_text\n            current_alt = confirm_alt\n            current_timeout = setTimeout(reset, confirmtime);\n        }\n    }\n</script>\n\n<button title={current_alt} on:click={clicker} class=\"{selected ? 'selected': ''} {active ? 'active' : ''} {rightmost ? 'rightmost' : ''} {leftmost ? 'leftmost' : ''}\">\n    {current_text}\n</button>\n\n<style>\n    button {\n\t    color: var(--text-color);\n        border-radius: 0;\n        padding: 3px 9px;\n        margin: none;\n        border-left: 1px solid;\n        border-right: none;\n        border-right-color: var(--deemph-border-color);\n        border-left-color: var(--deemph-border-color);\n        /* box-shadow: 3px 3px 10px hsl(calc(var(--primary-h) - 15), var(--primary-s), calc(var(--primary-l) + 20%)),\n                    -3px -3px 10px hsl(calc(var(--primary-h) + 45), var(--primary-s), calc(var(--primary-l) + 15%)); */\n    }\n    button.rightmost {\n        border-bottom-right-radius: 15px;\n        border-top-right-radius: 15px;\n        border-right: 1px outset;\n        border-color: var(--main-border-color);\n        border-left: none;\n    }\n    button.leftmost {\n        border-bottom-left-radius: 15px;\n        border-top-left-radius: 15px;\n        border-left: 1px outset;\n        border-color: var(--main-border-color);\n    }\n\n</style>","<script>\n    import {logout} from './apiclient.js'\n    import FancyButton from './FancyButton.svelte'\n    export let userlist\n    export let current_user\n    // console.log(JSON.stringify(userlist))\n\n    function wrapped_logout() {\n        logout(current_user)\n        current_user = 'logout'\n    }\n\n</script>\n\n<ul>\n    <li>\n            <FancyButton text=\"⚙️\" />\n    </li>\n    <li>\n        <h1>BlakBullet</h1>\n    </li>\n    <li>\n        <div id=\"whoslogged\">\n            <select name=\"viewuser\" id=\"viewuser\" bind:value={current_user}>\n                {#each userlist as user}\n                <option value={user.id}>{user.username}</option>\n                {/each}\n                <option value=\"new\">Add User</option>\n            </select>\n            <FancyButton text=\"Logoff\" on:confirm-click={()=>wrapped_logout()}/>\n        </div>\n    </li>\n</ul>\n\n<style>\n    h1 {\n        font-size: 15px;\n    }\n    ul li {\n        list-style: none;\n    }\n    ul {\n        height: 40px;\n        background: var(--gradient-chrome);\n        box-shadow: 0px 0px 9px #0004;\n        padding: 3px;\n        border: 1px solid #0006;\n        display: flex;\n        flex-flow: row;\n        justify-content: space-between;\n        align-items: center;\n        border-radius: 0 0 20px 20px;\n    }\n    select {\n    }\n    select:active {\n        background: var(--button-click-back);\n    }\n</style>","<script>\nimport { timestamp_format } from \"./timestuff\";\n\n    export let history = []\n    let expand = false\n    let hide_events = true\n</script>\n\n<button class=\"hideit\" on:click={()=>{hide_events=!hide_events}}>{hide_events ? 'Show Events' : 'Hide Events'}</button>\n<ul class:expanded={expand} class=\"mainlist\">\n    {#each history as item (item.type + item.id)}\n        {#if !hide_events || item.type === 'note'}\n        <li>\n            <ul class='{item.type} {item.kind} history-item'>\n                <li class=\"type\">\n                    {item.type}\n                </li>\n                <li class='kind'>\n                    {item.kind}\n                </li>\n                <li class=\"date\">\n                    {timestamp_format(item.date)}\n                </li>\n                <li class='date-to'>\n                    {timestamp_format(item.date_to)}\n                </li>\n                <li class='subtext'>\n                    {item.text}\n                </li>\n                <li class='meta'>\n                    {item.meta}\n                </li>\n            </ul>\n        </li>\n        {/if}\n    {/each}\n\n</ul>\n<button class=\"expando\" on:click={()=>{expand=!expand}}>{expand ? 'Contract' : 'Expand'}</button>\n\n<style>\n    li {\n        list-style: none;\n    }\n    button {\n        width: 100%;\n    }\n    .expando {\n        border-bottom-left-radius: 10px;\n        border-bottom-right-radius: 10px;\n    }\n    .hideit {\n        border-top-left-radius: 10px;\n        border-top-right-radius: 10px;\n    }\n    .mainlist {\n        padding: 5px;\n        max-height: 100px;\n        overflow: hidden;\n        box-shadow: var(--card-part-shadow);\n        border: 1px solid #FFF3;\n    }\n    .history-item {\n        background: var(--gradient-subtle);\n        display: grid;\n        grid-template-rows:auto;\n        grid-template-columns: 2em auto;\n        margin: 10px;\n        margin-bottom: 10px;\n        padding: 5px;\n        box-shadow: 0px 0px 3px hsl(calc(var(--primary-h) - 20 + var(--primary-h-mod)), var(--primary-s), 45%),\n        0 0 3px hsl(calc(var(--primary-h) + 20), var(--primary-s), 15%);\n        /* text-shadow: 0 0 4px hsl((var(--primary-h)), var(--primary-s), var(--primary-l)); */\n        border: 1px outset hsl(var(--primary-h), 50%, 50%);\n        border-radius: 5px;\n        white-space: pre-line;\n    }\n    .event {\n        /* --primary-l: 20%; */\n        grid-template-areas: \n        'type kind'\n        'type date'\n        'type dato'\n        'type meta'\n        ;\n    }\n    .note {\n        /* --primary-l: 20%; */\n        /* --primary-h: 50; */\n        --primary-h-mod: 120;\n        grid-template-areas: \n        'type date'\n        'type sbtx'\n        ;\n        /* color: black; */\n        mix-blend-mode:lighten;\n    }\n    @media only screen and (max-width: 500px) {\n\n    }\n    .mainlist.expanded {\n        max-height: inherit;\n    }\n    .type {\n        grid-area: type;\n        height: 100%;\n        width: 1em;\n        writing-mode: vertical-lr;\n        text-align: center;\n        /* transform: rotate(180); */\n    }\n    /* .type::before {\n        content: 'Type: '\n    } */\n    .date {\n        grid-area: date;\n    }\n    /* .date::before {\n        display: inline-block;\n        content: 'Date: ';\n        width: 40px;\n    } */\n    .kind {\n        grid-area: kind;\n        /* text-align: center; */\n    }\n    .kind::before {\n        /* content: 'Kind: ' */\n    }\n    .kind {\n        text-transform: capitalize;\n    }\n    .note .kind {\n        display: none;\n    }\n    .meta {\n        display: none;\n        grid-area: meta;\n    }\n    .delegate .meta {\n        display: inline-block;\n    }\n    .meta::before {\n        content: 'Meta: '\n    }\n    .delegate .meta::before {\n        content: 'Delegated To: '\n    }\n    .note .meta {\n        display: none;\n    }\n    .date-to {\n        display: none;\n        grid-area: dato;\n    }\n    :is(.defer, .reschedule, .changedue) .date-to {\n        display: inline-block;\n    }\n    .date-to::before {\n        display: inline-block;\n        content: 'To: ';\n        /* width: 40px; */\n    }\n    .note .date-to {\n        display: none;\n    }\n    .subtext {\n        grid-area: sbtx;\n    }\n    .subtext::before {\n        /* content: 'Text: ';\n        display: block; */\n    }\n    .event .subtext {\n        display: none;\n        white-space: pre-line;\n    }\n    .note .subtext {\n        display: inline-block;\n    }\n</style>","<script>\n    import FancyButton from './FancyButton.svelte'\n    import FancyButtonBar from './FancyButtonBar.svelte'\n    import {createEventDispatcher} from 'svelte'\n\n    const dispatch = createEventDispatcher();\n\n    export let filtermethod = \"past\"\n    $: console.log(filtermethod)\n    \n    function filterclick(ev) {\n        console.log(ev)\n    }\n\n    function addnew_handler() {\n        dispatch('addnew')\n    }\n</script>\n\n<div>\n    <!-- <ul>\n        <li><FancyButton text=\"Now\" /></li>\n        <li><FancyButton text=\"Then\" active=true/></li>\n        <li><FancyButton text=\"Past\" /></li>\n        <li><FancyButton text=\"Search\" /></li>\n    </ul> -->\n    <FancyButtonBar on:confirm-click={filterclick} selector=true bind:selected={filtermethod} items={[\n        {text:\"📅\", alt:\"Current Tasks\", name:\"current\", confirm:false},\n        {text:\"🔮\", alt:\"Future Tasks\", name:\"future\", confirm:false},\n        {text:\"👻\", alt:\"Past Tasks\", name:\"past\", confirm:false},\n        {text:\"✅\", alt:\"Completed Tasks\", name:\"completed\", confirm:false},\n        {text:\"❌\", alt:\"Deactivated Tasks\", name:\"deactivated\", confirm:false},\n        {text:\"☢️\", alt:\"Active Tasks\", name:\"active\", confirm:false},\n        {text:\"🔎\", alt:\"Search All Tasks\", name:\"search\", confirm:false},\n    ]}/>\n    <ul>\n        <li><FancyButton text=\"Add +\" on:confirm-click={addnew_handler}/></li>\n    </ul>\n</div>\n\n<style>\n    ul li {\n        display: inline-block;\n    }\n    div {\n        height: 100%;\n        display: flex;\n        flex-flow: row;\n        justify-content: space-around;\n        align-items: center;\n        background: var(--gradient-chrome);\n        box-shadow: 0 0 1px hsl(var(--primary-h), var(--primary-s), 30%);\n        padding: 0 5px;\n    }\n</style>","<script>\n    import App from './App.svelte'\n    import FancyButton from './FancyButton.svelte'\n    import FilterBar from './FilterBar.svelte'\n    import TaskList from './TaskList.svelte'\n\n    import { createEventDispatcher } from 'svelte';\n\n    const dispatch = createEventDispatcher();\n\n    export let items = []\n    $: items = items.map((n,i)=>{\n        n.leftmost = i === 0\n        n.rightmost = i === items.length-1\n        return n\n    })\n    export let selector=false\n    export let selected=\"\"\n\n    function confirm_it(ev) {\n        if (selector) {\n            selected = ev.detail.name\n        } else {\n            dispatch('confirm-click', ev.detail)\n        }\n    }\n\n</script>\n\n<ul>\n    {#each items as item (item)}\n    <li>\n        <FancyButton {...item} selected={selector && item.name===selected ? true : false} on:confirm-click={confirm_it}></FancyButton>\n    </li>\n    {/each}\n</ul>\n\n<style>\n    ul {\n        display: flex;\n        flex-direction: row;\n        justify-content: center;\n        align-items: center;\n        padding: 0;\n        margin: 0;\n    }\n    li {\n        display: inline-block;\n    }\n    ul li > :global(.fancy-list-button){\n        color: blue;\n    }\n</style>","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","<script>\n\n    import {timestamp_format, is_today, is_future, is_past} from './timestuff'\n\n    import HistoryList from './HistoryList.svelte'\n    import FancyButtonBar from './FancyButtonBar.svelte'\n    import * as api from './apiclient'\n    import { createEventDispatcher } from 'svelte';\n    import { fly, slide, fade } from 'svelte/transition';\n\n    const dispatch = createEventDispatcher()\n\n    export let task = {}\n\n    $: history = make_history(task)\n    // $: console.log(history)\n\n    $: last_event = task.events[0]\n    let status = ''\n    $: if (task.struck) {\n        status = 'Struck'\n    } else if (task.date_completed) {\n        status = 'Completed'\n    } else if (task.date_deactivated) {\n        status = 'Deactivated'\n    } else if (task.due && task.due < Date.now()/1000) {\n        status = 'Overdue'\n    } else if (task.events[task.events.legnth-1]?.kind === \"deligate\") {\n        status = 'Delegated'\n    } else if (is_past(task.date)) {\n        status = 'Forgotten'\n    } else if (is_future(task.date)) {\n        status = \"Future\"\n    } else {\n        status = 'Active'\n    }\n    $: action_required = status === 'Forgotten' || status === 'Overdue'\n\n    let button_options = {\n        defer:{text:'➡️', confirm_text:\"Defer?\", alt:\"Defer Task\", name:\"defer\"},\n        complete:{text:'✅', confirm_text:\"Complete?\", alt:\"Complete Task\", name:\"complete\"},\n        reschedule:{text:'📅', confirm_text:\"Reschedule?\", alt:\"Reschedule Task\", name:\"reschedule\"},\n        cancel:{text:'❌', confirm_text:\"Cancel?\", alt:\"Cancel Task\", name:\"cancel\"},\n        addnote:{text:\"📝\", confirm_text:\"Add Note?\", alt:\"Cancel Task\", name:\"addnote\"},\n        delegate:{text:\"🙋\", confirm_text:\"Delegate?\", alt:\"Delegate Task\", name:\"delegate\"},\n        reactivate:{text:\"♻️\", confirm_text:\"Reactivate?\", alt:\"Reactivate Task\", name:\"reactivate\"},\n        changedue:{text:\"⏰\", confirm_text:\"Change Due?\", alt:\"Change Due Date\", name:\"changedue\"},\n    }\n\n    let actionbuttons = [\n\n    ]\n\n    $: {\n        if (status === \"Deactivated\" || status === \"Completed\") {\n            actionbuttons = [button_options.reactivate]\n        } else {\n            actionbuttons = [\n                button_options.complete,\n                button_options.defer,\n                button_options.reschedule,\n                button_options.cancel,\n                button_options.delegate,\n                button_options.changedue,\n                button_options.addnote,\n            ]\n        }\n    }\n\n    function make_history(thetask) {\n        let newnotes = thetask.notes?.map((t)=>Object.assign({}, t, {type:'note'}))\n        let newevents = thetask.events?.map((t)=>Object.assign({}, t, {type:'event'}))\n        let combo = [...newnotes, ...newevents]\n        combo.sort((a,b)=>b.date - a.date)\n        return combo\n    }\n\n    function task_action_forward({detail:{name}}) {\n        dispatch('task-action', {id:task.id, action:name})\n    }\n\n</script>\n\n<!-- <div in:fly=\"{{ x: 200, duration: 1000 }}\" out:fly=\"{{ x: 200, duration: 500 }}\" class=\"card {status}\" class:action-required={action_required} class:has-due-date={task.due}> -->\n<div transition:slide class=\"card {status}\" class:action-required={action_required} class:has-due-date={task.due} >\n    <ul>\n        <li class=\"text\">\n            {task.text}\n        </li>\n        <li class=\"status\">\n            {status}\n        </li>\n        <li class=\"actions\">\n            <FancyButtonBar items={actionbuttons} on:confirm-click={task_action_forward}/>\n        </li>\n        {#each ['date', 'due', 'date_created', 'date_deactivated', 'date_completed'] as datename (datename)}\n            <li class=\"{datename} dateitem\" class:notime={!task[datename]}>\n                {timestamp_format(task[datename])}\n            </li>\n        {/each}\n        <!-- <li>\n            {JSON.stringify(task)}\n        </li> -->\n        <li class=\"history\">\n            <HistoryList {history} />\n        </li>\n    </ul>\n</div>\n\n<style>\n    .card.has-due-date {\n        --primary-h-mod: -60;\n    }\n    .card.action-required {\n        --primary-h-mod: 100;\n        --primary-l: 20%;\n    }\n    .card.Deactivated {\n        opacity: 0.5;\n    }\n    .card.Completed {\n        opacity: 0.75;\n    }\n    .card {\n        width: calc(100% - 20px);\n        padding: 10px;\n        margin: 10px 0;\n        background: var(--gradient-subtle);\n        /* background: hsl(var(--primary-h), var(--primary-s), var(--primary-l)); */\n        border-radius: 20px;\n        /* box-shadow:  3px 3px 10px #4b007c,\n                    -3px -3px 10px #d43bff; */\n        box-shadow:  var(--glow-shadow);\n        border: 0.5px solid #FFF6;\n    }\n    .card ul {\n        display: flex;\n        flex-direction: column;\n    }\n    .card li {\n        list-style: none;\n    }\n    .card li.text {\n        border-radius: 15px;\n        padding: 15px;\n        border: 1px solid #FFF3;\n        box-shadow: var(--card-part-shadow);\n        z-index: 10;\n    }\n    .card li.status {\n        z-index: 0;\n        text-align: center;\n        border: 1px solid #FFF3;\n        border-bottom-right-radius: 15px;\n        border-bottom-left-radius: 15px;\n        border-top: none;\n        margin-top: -11px;\n        padding-top: 11px;\n    }\n    .card li.status::before {\n        content: 'Status: '\n    }\n    .card li.actions {\n        padding: 15px 0;\n    }\n    .card li.dateitem::before {\n        display: inline-block;\n        width: 60px;\n        text-align: left;\n        /* border-right: solid 1px hsl(var(--primary-h), var(--primary-s), calc(var(--primary-l) + 50%)); */\n        margin-right: 0.7ch;\n    }\n    .card li.date::before {\n        content: 'Date: '\n    }\n    .card li.due::before {\n        content: 'Due: '\n    }\n    .card li.date_created::before {\n        content: 'Created: '\n    }\n    .card li.date_completed::before {\n        content: 'Completed: '\n    }\n    .card li.date_deactivated::before {\n        content: 'Deactivated: '\n    }\n    .card li.notime {\n        display: none;\n    }\n\n    .card li.history::before {\n        content: \"History\";\n        width: 100%;\n        text-align: center;\n        display: block;\n        \n    }\n    .card li.history {\n\n    }\n\n</style>","<script>\n    import FancyButton from './FancyButton.svelte'\n    import TaskCard from './TaskCard.svelte'\n    import * as timestuff from './timestuff'\n    import { slide, fade, fly, crossfade, blur } from 'svelte/transition'\n\n\n    export let tasks\n    $: if (tasks === undefined) {tasks={}}\n    let sortmethod = \"date\"\n    export let filtermethod = \"current\"\n    let method_filters = {\n        'current': (task) => timestuff.is_today(task.date) && !task.date_completed && !task.date_deactivated,\n        'future': (task) => timestuff.is_future(task.date) && !task.date_completed && !task.date_deactivated,\n        'past': (task) => timestuff.is_past(task.date),\n        'completed': (task) =>  task.date_completed,\n        'deactivated': (task) => task.date_deactivated,\n        'active': (task) => !task.date_deactivated && !task.date_completed,\n    }\n    // $: filtered_tasks = Object.values(tasks).filter(method_filters[filtermethod])\n\n    // For performance, we run the filter functions *once* and cache\n    // the result\n    $: lists = Object.entries(method_filters).map(\n        ([k,v])=>[k,Object.values(tasks).filter(v)]\n    ).reduce(\n        (acc,[k,v])=>{acc[k]=v; return acc},\n        {}\n    )\n    $: console.log(lists)\n\n\n</script>\n\n<div>\n    {#key filtermethod}\n        <ul>\n            {#each lists[filtermethod] as task (task.id)}\n                <li>\n                    <TaskCard {task} on:task-action />\n                </li>\n            {/each}\n        </ul>\n    {/key}\n</div>\n<style>\n    ul {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        flex-basis: auto;\n        margin-top: 50px;\n        margin-bottom: 50px;\n        overflow: scroll;\n        height: 100%;\n        width: 100%;\n        padding: 0;\n    }\n    li {\n        list-style: none;\n        /* margin: 10px; */\n        /* padding: 15px; */\n        /* height: 4em; */\n        width: calc(100% - 50px);\n    }\n</style>","<script>\n    import {login} from '../apiclient.js'\n    export let done = false\n    export let current_user = null\n    let username = \"\"\n    let password = \"\"\n    let error = \"\"\n\n    async function do_login() {\n        error = ''\n        let userdata = await login(username, password)\n        if (userdata.id) {\n            done=true\n            current_user = userdata.id\n        } else {\n            error = \"Login failed\"\n        }\n    }\n</script>\n\n<div>\n    {#if error != \"\"}\n        <div id=\"error\">{error}</div>\n    {/if}\n    <form>\n        <label for=\"username\">Username:</label><input id=\"username\" name=\"username\" bind:value={username}>\n        <label for=\"password\">Password:</label><input id=\"password\" name=\"password\" type=\"password\" bind:value={password}>\n        <button on:click|preventDefault={do_login}>Login</button>\n    </form>\n</div>\n\n<style>\n    form {\n        display: flex;\n        flex-direction: column;\n        justify-content: start;\n        align-items: center;\n    }\n    input {\n        width: 100%;\n\n    }\n    label {\n        width: auto;\n    }\n    button {\n        width: 100%;\n    }\n</style>","<script>\n    import * as api from '../apiclient.js'\n    export let current_user\n    export let task_id\n    export let done\n    $: task = api.tasks[current_user][task_id]\n    let person_name = ''\n    function make_delegate() {\n        api.task_act('delegate', current_user, task_id, person_name)\n        done=true\n    }\n</script>\n\n<div id=\"delegate-container\">\n    <div class=\"text\">{task.text}</div>\n    <!-- <label for=\"name\">To</label> -->\n    <input type=\"text\" name=\"name\" id=\"delegate-to\" placeholder=\"To whome\" bind:value={person_name}>\n    <button on:click={make_delegate}>Delegate</button>\n</div>\n\n<style>\n    #delegate-container {\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n    }\n    .text {\n        width: 100%;\n        padding-bottom: 1em;\n    }\n    .text::before {\n        content: \"Task Text: \"\n    }\n    label {\n        width: 100%;\n        border-top: 1px solid hsl(var(--primary-h), var(--primary-s), calc(var(--primary-l) + 50%));\n    }\n    button {\n        width: 100%;\n    }\n    input {\n        width: 100%;\n    }\n</style>","<script>\n    import * as api from '../apiclient.js'\n    export let current_user\n    export let done\n    let text = \"\"\n    let due = \"\"\n\n    async function make_new() {\n        let newdue = null\n        if (due) {\n            newdue = Math.ceil(new Date(due).getTime()/1000)\n            console.log(due, newdue)\n        }\n        await api.make_new_task(current_user, text, newdue)\n        done = true\n    }\n</script>\n\n<div id=\"container\">\n    <!-- <label for=\"name\">To</label> -->\n    <textarea name=\"text\" id=\"text\" cols=\"30\" rows=\"7\" bind:value={text}></textarea>\n    <input type=\"datetime-local\" name=\"due\" id=\"due\" bind:value={due}>\n    <button on:click={make_new}>New Task</button>\n</div>\n\n<style>\n    #container {\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n    }\n    .text::before {\n        content: \"Task Text: \"\n    }\n    label {\n        width: 100%;\n        border-top: 1px solid hsl(var(--primary-h), var(--primary-s), calc(var(--primary-l) + 50%));\n    }\n    button {\n        width: 100%;\n    }\n    input {\n        width: 100%;\n    }\n</style>","<script>\n    import * as api from '../apiclient.js'\n    export let current_user\n    export let task_id\n    export let done\n    $: task = api.tasks[current_user][task_id]\n    let newtime = ''\n    function reschedule() {\n        let time = null\n        if (newtime) {\n            time = Math.ceil(new Date(newtime).getTime()/1000)\n            console.log(newtime, time)\n            api.task_act('reschedule', current_user, task_id, time)\n            done=true\n        }\n    }\n</script>\n\n<div id=\"delegate-container\">\n    <!-- <label for=\"name\">To</label> -->\n    <input type=\"datetime-local\" name=\"newdate\" id=\"newdate\" placeholder=\"To whome\" bind:value={newtime}>\n    <button on:click={reschedule}>Reschedule</button>\n</div>\n\n<style>\n    #delegate-container {\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n    }\n    .text {\n        width: 100%;\n        padding-bottom: 1em;\n    }\n    .text::before {\n        content: \"Task Text: \"\n    }\n    label {\n        width: 100%;\n        border-top: 1px solid hsl(var(--primary-h), var(--primary-s), calc(var(--primary-l) + 50%));\n    }\n    button {\n        width: 100%;\n    }\n    input {\n        width: 100%;\n    }\n</style>","<script>\n    import * as api from '../apiclient.js'\n    export let current_user\n    export let task_id\n    export let done\n    $: task = api.tasks[current_user][task_id]\n    let newtime = ''\n    function change_due() {\n        let time = null\n        if (newtime) {\n            time = Math.ceil(new Date(newtime).getTime()/1000)\n            console.log(newtime, time)\n            api.task_act('changedue', current_user, task_id, time)\n            done=true\n        }\n    }\n    async function remove_due() {\n        await api.task_act('removedue', current_user, task_id)\n        done=true\n    }\n</script>\n\n<div id=\"delegate-container\">\n    <!-- <label for=\"name\">To</label> -->\n    <input type=\"datetime-local\" name=\"newdate\" id=\"newdate\" placeholder=\"To whome\" bind:value={newtime}>\n    <button on:click={change_due}>Change Due</button>\n    <button on:click={remove_due}>Remove Due</button>\n</div>\n\n<style>\n    #delegate-container {\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n    }\n    .text {\n        width: 100%;\n        padding-bottom: 1em;\n    }\n    .text::before {\n        content: \"Task Text: \"\n    }\n    label {\n        width: 100%;\n        border-top: 1px solid hsl(var(--primary-h), var(--primary-s), calc(var(--primary-l) + 50%));\n    }\n    button {\n        width: 100%;\n    }\n    input {\n        width: 100%;\n    }\n</style>","<script>\n    import * as api from '../apiclient.js'\n    export let current_user\n    export let task_id\n    export let done\n    $: task = api.tasks[current_user][task_id]\n    let text = ''\n    $: console.log(text)\n    function make_delegate() {\n        if (text) {\n            api.task_act('addnote', current_user, task_id, text)\n            done=true\n        }\n    }\n</script>\n\n<div id=\"delegate-container\">\n    <!-- <label for=\"name\">To</label> -->\n    <textarea name=\"text\" id=\"text\" cols=\"30\" rows=\"7\" bind:value={text}></textarea>\n    <button on:click={make_delegate}>Add Note</button>\n</div>\n\n<style>\n    #delegate-container {\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n    }\n    .text {\n        width: 100%;\n        padding-bottom: 1em;\n    }\n    .text::before {\n        content: \"Task Text: \"\n    }\n    label {\n        width: 100%;\n        border-top: 1px solid hsl(var(--primary-h), var(--primary-s), calc(var(--primary-l) + 50%));\n    }\n    button {\n        width: 100%;\n    }\n    input {\n        width: 100%;\n    }\n</style>","<script>\n    import LoginModal from './Modals/LoginModal.svelte'\n    import TaskHistoryModal from './Modals/TaskHistoryModal.svelte'\n    import DelegateModal from './Modals/DelegateModal.svelte'\n    import AddNewModal from './Modals/AddNewModal.svelte'\n    import RescheduleModal from './Modals/RescheduleModal.svelte'\n    import ChangeDueModal from './Modals/ChangeDueModal.svelte'\n    import NewNoteModal from './Modals/NewNoteModal.svelte'\n    export let current_user = null\n    export let task_id = null\n    export let note_id = null\n    export let event_id = null\n    export let modal_name = ''\n    let modals = {\n        'login': {title: \"Login As New User\", component: LoginModal},\n        'delegate_task': {title: \"Delegate Task\", component: DelegateModal},\n        'addnew': {title: \"Add New Task\", component: AddNewModal},\n        'reschedule': {title: \"Reschedule Task\", component: RescheduleModal},\n        'changedue': {title: \"Change Task Due Date\", component: ChangeDueModal},\n        'addnote': {title: \"Add New Task\", component: NewNoteModal},\n    }\n    $: current_modal = modals[modal_name]\n\n    function hide_modal() {\n        console.log('doing?')\n        modal_name = ''\n        done=false\n    }\n    let done = false\n    $: if (done) {hide_modal()}\n</script>\n\n{#if modal_name != ''}\n    <div id=\"modal_blur\" on:click={hide_modal}></div>\n    {task_id} {note_id} {event_id} {modal_name}\n    <div id=\"modal\">\n        <div id=\"modal-top\">\n            <h3>{current_modal.title}</h3>\n            <!-- <FancyButton text=\"x\" confirm=false  on:confirm-click={hide_modal} /> -->\n            <button on:click={hide_modal}>X</button>\n        </div>\n        <div id=\"modal-main\">\n            <svelte:component this={current_modal.component} {task_id} {note_id} {event_id} bind:done={done} bind:current_user={current_user}/>\n        </div>\n    </div>\n{/if}\n\n<style>\n    #modal_blur {\n        position: fixed;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        z-index: 1000;\n        background: hsla(var(--primary-h), var(--primary-s), var(--primary-l), 0.5);\n    }\n    #modal {\n        position: fixed;\n        --modal-width: 300px;\n        top: 15vh;\n        bottom: 15vh;\n        left: calc(50vw - calc(var(--modal-width) / 2));\n        right: calc(50vw - calc(var(--modal-width) / 2));\n        z-index: 2000;\n        background: var(--gradient-subtle);\n        border: 1px solid;\n        border-color: hsl(var(--primary-h), var(--primary-s), 80%);\n        box-shadow: var(--modal-shadow);\n        border-radius: 5px;\n    }\n    @media only screen and (min-width: 650px) {\n        #modal {\n            --modal-width: 600px;\n        }\n    }\n    #modal-top {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between;\n        border-color: inherit;\n        border-bottom: inherit;\n        height: 40px;\n        padding: 0 5px;\n    }\n    #modal-top > button {\n        width: 30px;\n        height: 30px;\n        border-radius: 30px;\n    }\n    #modal-top > * {\n        display: inline-block;\n    }\n    #modal-main {\n        width: calc(100% - 10px);\n        height: calc(100% - 41px - 10px);\n        padding: 0;\n        overflow: scroll;\n        box-shadow: var(--modal-main-shadow);\n        padding: 5px;\n    }\n    \n</style>","<script>\n\timport TopBar from './TopBar.svelte'\n\timport TaskList from './TaskList.svelte'\n\timport FilterBar from './FilterBar.svelte'\n\timport ModalSystem from './ModalSystem.svelte'\n\timport * as api from './apiclient.js'\nimport FancyButton from './FancyButton.svelte'\nimport FancyButtonBar from './FancyButtonBar.svelte'\n\n\n\tapi.init()\n\n\tlet current_user = Object.keys(api.users)[0]\n\tlet userlist = Object.values(api.users)\n\tconsole.log(userlist)\n\n\t$: tasks = api.tasks[current_user]\n\n\tlet filtermethod = 'current'\n\n\tlet modal_info = {modal_name: 'login'}\n\n\tlet current_modal = ''\n\n\t$: if (current_user === 'new') {current_modal = 'login'}\n\t$: if (current_user === undefined) {current_modal = 'login'}\n\t$: if (current_user === 'logout') {current_user = userlist[userlist.length-1]?.id}\n\n\tfunction setnew() {\n\t\t\tuserlist = Object.values(api.users)\n\t\t\ttasks = api.tasks[current_user]\n\t}\n\n\tlet watcher = {\n\t\tlogin_change:setnew,\n\t\ttasks_change:setnew\n\t}\n\tapi.set_watcher(watcher)\n\n\tconst action_handlers = {\n\t\t'defer':(id)=>api.task_act('defer', current_user, id),\n\t\t'complete':(id)=>api.task_act('complete', current_user, id),\n\t\t'reactivate':(id)=>api.task_act('reactivate', current_user, id),\n\t\t'cancel':(id)=>api.task_act('cancel', current_user, id),\n\t\t'strike':(id)=>api.task_act('strike', current_user, id),\n\t\t'unstrike':(id)=>api.task_act('unstrike', current_user, id),\n\t\t'delegate':(id)=>{modal_info={modal_name:'delegate_task', task_id:id, current_user}},\n\t\t'reschedule':(id)=>{modal_info={modal_name:'reschedule', task_id:id, current_user}},\n\t\t'changedue':(id)=>{modal_info={modal_name:'changedue', task_id:id, current_user}},\n\t\t'addnote':(id)=>{modal_info={modal_name:'addnote', task_id:id, current_user}},\n\t}\n\n\tfunction on_task_action({detail:{id,action}}) {\n\t\tconsole.log(id,action)\n\t\taction_handlers[action](id)\n\t}\n\n\tfunction addnew_handler() {\n\t\tmodal_info={modal_name:'addnew', current_user}\n\t}\n\n</script>\n\n<header>\n\t<TopBar {userlist} bind:current_user={current_user}/>\n</header>\n<main>\n\t<TaskList {tasks} on:task-action={on_task_action} bind:filtermethod={filtermethod}/>\n</main>\n<footer>\n\t<FilterBar on:addnew={addnew_handler} bind:filtermethod={filtermethod} />\n</footer>\n\n\n<ModalSystem {...modal_info} bind:current_user={current_user} bind:modal_name={current_modal}/>\n\n<style>\n</style>","import App from './App.svelte';\nimport * as api from './apiclient.js'\n\nwindow.api = api\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","select_option","select","i","length","option","__value","selected","toggle_class","toggle","classList","custom_event","type","detail","e","createEvent","initCustomEvent","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","str","hash","charCodeAt","doc","ownerDocument","add","stylesheet","__svelte_stylesheet","head","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","style","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","component","createEventDispatcher","Error","get_current_component","callbacks","$$","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","add_flush_callback","flushing","seen_callbacks","flush","update","pop","callback","has","fragment","before_update","dirty","ctx","after_update","promise","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","d","null_transition","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","Math","abs","start","end","group","go","easing","tick","css","fulfill","loop","[object Object]","then","destroy_block","lookup","key","outro_and_destroy_block","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","get","set","will_move","did_move","m","first","new_block","old_block","new_key","old_key","get_spread_update","levels","updates","to_null_out","accounted_for","$$scope","undefined","get_spread_object","spread_props","bind","index","props","bound","create_component","mount_component","customElement","on_mount","on_destroy","new_on_destroy","map","destroy_component","detaching","make_dirty","fill","instance","create_fragment","not_equal","parent_component","on_disconnect","context","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","SvelteComponent","this","$destroy","splice","$$props","obj","$$set","keys","timestamp_format","timestamp","toDateString","timestamp_date_format","getHours","getMinutes","timestamp_time_format","is_today","today","getDate","getMonth","getFullYear","is_past","istoday","todaystamp","is_future","api_root","users","async","JSON","parse","localStorage","getItem","all","id","fetch_all_tasks","watcher","login_change","tasks_change","set_watcher","newwatcher","login","l_username","l_password","formdata","FormData","user_data","res","fetch","method","body","token","refresh_token","token_type","status","message","json","headers","Authorization","username","setItem","stringify","random","thrown","console","error","log","makerequest","path","user_id","query","current_user","queryopts","base","v","entries","encodeURIComponent","encode_query_string","logout","responsebody","import_tasks","tlist","tasks_m","owner_id","task_act","action","task_id","thing_type","thing_id","stub_url","big_act","make_new_task","due","resp","activate","makenote","delegate","deffer","cancel","reschedule","strike","complete","reactivate","changedue","query_obj","confirm","confirm_text","alt","confirm_alt","confirmtime","rightmost","leftmost","current_alt","current_text","clicked","current_timeout","reset","clearTimeout","setTimeout","iterations","userlist","wrapped_logout","selected_option","querySelector","date","date_to","meta","history","expand","hide_events","filterclick","ev","filtermethod","items","selector","cubicOut","slide","getComputedStyle","opacity","height","parseFloat","padding_top","paddingTop","padding_bottom","paddingBottom","margin_top","marginTop","margin_bottom","marginBottom","border_top_width","borderTopWidth","border_bottom_width","borderBottomWidth","min","button_options","defer","addnote","actionbuttons","thetask","combo","notes","events","sort","make_history","struck","date_completed","date_deactivated","legnth","action_required","method_filters","current","timestuff.is_today","future","timestuff.is_future","past","timestuff.is_past","completed","deactivated","lists","values","reduce","acc","preventDefault","done","password","userdata","person_name","api.tasks","api.task_act","newdue","ceil","getTime","api.make_new_task","newtime","time","title","note_id","event_id","modal_name","modals","LoginModal","delegate_task","DelegateModal","addnew","AddNewModal","RescheduleModal","ChangeDueModal","NewNoteModal","hide_modal","current_modal","api.init","api.users","modal_info","setnew","api.set_watcher","action_handlers","unstrike","api"],"mappings":"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"}