{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/css/utils.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,IAAI,EACL,MAAM,UAAU,CAAC;AAElB,OAAO,EAEL,cAAc,EACf,MAAM,iBAAiB,CAAC;AAEzB;;;GAGG;AACH,MAAM,UAAU,6BAA6B,CAAC,OAAa,EAAE;IAC3D,MAAM,EACJ,GAAG,EACH,QAAQ,EACR,KAAK,GAAC,EAAE,EACR,KAAK,GAAC,EAAE,EACR,IAAI,GAAG,cAAc,CAAC,IAAI,EAC1B,YAAY,EACZ,YAAY,EACZ,OAAO,EACP,OAAO,EACP,UAAU,GAAG,IAAI,EAClB,GAAG,IAAI,CAAC;IAET,2CAA2C;IAC3C,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,+BAA+B;IACnD,OAAO;QACL,QAAQ;QACR,UAAU;QACV,GAAG,EAAE,IAAI,CAAA,UAAU,GAAG,UAAU;QAChC,KAAK,EAAE,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAE,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;YACvE,MAAM,EAAE,KAAK;SACd,CAAC,CAAC,iBACD,MAAM,EAAE,cAAc,EACtB,IAAI,EAAE,YAAY,EAClB,EAAE,EAAE,UAAU,IACX,KAAK,CACT,CAAC,CAAC,CAAC,CAAC,KAAK;QACZ,KAAK,EAAE,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAE,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;YACvE,MAAM,EAAE,KAAK;YACb,IAAI;SACL,CAAC,CAAC,iBACD,MAAM,EAAE,cAAc,EACtB,IAAI,EAAE,YAAY,EAClB,EAAE,EAAE,UAAU,EACd,IAAI,IACD,KAAK,CACT,CAAE,CAAA,CAAC,CAAC,KAAK;QACZ,OAAO;QACP,OAAO;QACP,YAAY;QACZ,YAAY;QACZ,IAAI;KACL,CAAA;AACH,CAAC;AAGD,MAAM,UAAU,kBAAkB,CAAC,IAAW,EAAE,SAAa;IAC3D,0BAA0B;IAC1B,MAAM,IAAI,GAAG,SAAS,EAAE,CAAC;IACzB,wCAAwC;IACxC,KAAI,IAAI,CAAC,IAAI,IAAI,EAAE;QACjB,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;KACxB;IACD,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,MAAM,EAAE;QACvC,GAAG;YACD,OAAO,IAAI,CAAC;QACd,CAAC;KACF,CAAC,CAAA;IACF,OAAO,SAAS,CAAC;AACnB,CAAC;AAED;;EAEE;AACF,MAAM,UAAU,YAAY,CAAC,IAAQ,EAAE,IAAQ;IAC7C,KAAK,IAAI,CAAC,IAAI,IAAI,EAAE;QAClB,IAAI;YACF,wDAAwD;YACxD,IAAK,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,IAAE,MAAM,EAAG;gBACjC,IAAI,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aAC1C;iBAAM;gBACL,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;aACnB;SACF;QAAC,OAAM,CAAC,EAAE;YACT,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;SACnB;KACF;IACD,OAAO,IAAI,CAAC;AACd,CAAC","sourcesContent":["import {\n  html\n} from 'lit-html';\n\nimport {\n  CSSTransitionOptions,\n  TransitionMode\n} from './interfaces.js';\n\n/**\n * takes an object and normalizes it into CSSTransitionOptions\n * by padding it with defaults etc..\n */\nexport function normalizeCSSTransitionOptions(opts : any = {}): CSSTransitionOptions {\n  const {\n    css,\n    duration,\n    enter={},\n    leave={},\n    mode = TransitionMode.Both,\n    onAfterEnter,\n    onAfterLeave,\n    onEnter,\n    onLeave,\n    skipHidden = true\n  } = opts;\n\n  // don't do it by default, it might confuse\n  const lock = false; //mode !== TransitionMode.Both;\n  return {\n    duration,\n    skipHidden,\n    css: html`<style>${css}</style>`,\n    enter: enter != false ? (Array.isArray(enter)||typeof enter === 'string' ? {\n        active: enter,\n      } : {\n        active: 'enter-active',\n        from: 'enter-from',\n        to: 'enter-to',\n        ...enter\n      }) : false,\n    leave: leave != false ? (Array.isArray(leave)||typeof leave === 'string' ? {\n        active: leave,\n        lock\n      } : {\n        active: 'leave-active',\n        from: 'leave-from',\n        to: 'leave-to',\n        lock,\n        ...leave\n      } ): false,\n    onEnter,\n    onLeave,\n    onAfterEnter,\n    onAfterLeave,\n    mode\n  }\n}\n\n\nexport function instantiateDefault(name:string, generator:any) {\n  // create default instance\n  const inst = generator();\n  // patch generator with default instance\n  for(let p in inst) {\n    generator[p] = inst[p];\n  }\n  Object.defineProperty(generator, 'name', {\n    get() {\n      return name;\n    }\n  })\n  return generator;\n}\n\n/*\n* avoiding lodash for now\n*/\nexport function mergeObjects(obj1:any, obj2:any) {\n  for (var p in obj2) {\n    try {\n      // Property in destination object set; update its value.\n      if ( obj2[p].constructor==Object ) {\n        obj1[p] = mergeObjects(obj1[p], obj2[p]);\n      } else {\n        obj1[p] = obj2[p];\n      }\n    } catch(e) {\n      obj1[p] = obj2[p];\n    }\n  }\n  return obj1;\n}"]}